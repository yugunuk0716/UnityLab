<color=#569CD6>using</color> <color=#DCDCDC>System.Collections;</color><newLine><color=#569CD6>using</color> <color=#DCDCDC>System.Collections.Generic;</color><newLine><color=#569CD6>using</color> <color=#DCDCDC>UnityEngine;</color><newLine><color=#569CD6>using</color> <color=#DCDCDC>UnityEngine.UI;</color><newLine><color=#DCDCDC></color><newLine><color=#569CD6>public class</color> <color=#4EC9B0>GameManager</color> <color=#DCDCDC>:</color> <color=#4EC9B0>MonoBehaviour</color><newLine><color=#DCDCDC>{</color><newLine><1><color=#DCDCDC>[</color><color=#4EC9B0>SerializeField</color><color=#DCDCDC>]</color><newLine><1><color=#569CD6>private</color> <color=#4EC9B0>GameObject</color> <color=#DCDCDC>enemyCroissant;</color><newLine><color=#DCDCDC></color><newLine><1><color=#569CD6>public</color> <color=#B5CEA8>Vector2</color> <color=#DCDCDC>minPosition;</color><newLine><1><color=#569CD6>public</color> <color=#B5CEA8>Vector2</color> <color=#DCDCDC>maxPosition;</color><newLine><color=#DCDCDC></color><newLine><1><color=#569CD6>private void Start</color><color=#DCDCDC>()</color><newLine><1><color=#DCDCDC>{</color><newLine><2><color=#1E1E1E>.</color><blink><color=#DCDCAA>StartCoroutine</color></blink><color=#DCDCDC>(</color><color=#DCDCAA>SpawnCroissant</color><color=#DCDCDC>());</color><newLine><1><color=#DCDCDC>}</color><newLine><newLine><1><color=#B5CEA8>IEnumerator</color> <color=#DCDCAA>SpawnCroissant</color><color=#DCDCDC>()</color><newLine><1><color=#DCDCDC>{</color><newLine><2><color=#569CD6>while</color> <color=#DCDCDC>(</color><color=#569CD6>true</color><color=#DCDCDC>)</color><newLine><2><color=#DCDCDC>{</color><newLine><3><color=#B5CEA8>float</color> <color=#DCDCDC>randomX =</color> <color=#4EC9B0>Random</color><color=#DCDCDC>.Range(</color><color=#B5CEA8>-6f</color><color=#DCDCDC>,</color> <color=#B5CEA8>6f</color><color=#DCDCDC>);</color><newLine><3><color=#569CD6>int</color> <color=#DCDCDC>count =</color> <color=#B5CEA8>0</color><color=#DCDCDC>;</color><newLine><3><color=#569CD6>while</color> <color=#DCDCDC>(</color><blink><color=#DCDCDC>count</color></blink> <color=#DCDCDC><</color> <color=#B5CEA8>5</color><color=#DCDCDC>)</color><newLine><3><color=#DCDCDC>{</color><newLine><4><color=#1E1E1E>.</color><blink><color=#DCDCAA>Instantiate</color></blink><color=#DCDCDC>(enemyCroissant,</color> <color=#569CD6>new</color> <color=#B5CEA8>Vector2</color><color=#DCDCDC>(</color><blink><color=#DCDCDC>randomX</color></blink><color=#DCDCDC>,</color> <color=#B5CEA8>15f</color><color=#DCDCDC>);</color><newLine><4><color=#DCDCDC>count++;</color><newLine><3><color=#DCDCDC>}</color><newLine><color=#DCDCDC></color><newLine><3><color=#569CD6>float</color> <color=#DCDCDC>delay =</color> <color=#4EC9B0>Random</color><color=#DCDCDC>.Range(</color><color=#B5CEA8>2f</color><color=#DCDCDC>,</color> <color=#B5CEA8>5f</color><color=#DCDCDC>);</color><newLine><3><color=#569CD6>yield return new</color> <color=#DCDCAA>WaitForSeconds</color><color=#DCDCDC>(delay);</color><newLine><2><color=#DCDCDC>}</color><newLine><1><color=#DCDCDC>}</color><newLine><color=#DCDCDC>}</color>