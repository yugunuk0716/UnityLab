<color=#569CD6>using</color> <color=#DCDCDC>System.Collections;</color><newLine><color=#569CD6>using</color> <color=#DCDCDC>System.Collections.Generic;</color><newLine><color=#569CD6>using</color> <color=#DCDCDC>UnityEngine;</color><newLine><color=#569CD6>using</color> <color=#DCDCDC>UnityEngine.UI;</color><newLine><color=#DCDCDC></color><newLine><color=#569CD6>public class</color> <color=#4EC9B0>GameManager</color> <color=#DCDCDC>:</color> <color=#DCDCDC>MonoBehaviour</color><newLine><color=#DCDCDC>{</color><newLine><1><color=#DCDCDC>[</color><color=#4EC9B0>SerializeField</color><color=#DCDCDC>]</color><newLine><1><color=#569CD6>private</color> <color=#4EC9B0>GameObject</color> <color=#DCDCDC>enemyCroissant;</color><newLine><color=#DCDCDC></color><newLine><1><color=#DCDCDC>[</color><color=#4EC9B0>SerializeField</color><color=#DCDCDC>]</color><newLine><1><color=#569CD6>private</color> <color=#4EC9B0>Text</color> <color=#DCDCDC>lifeText;</color><newLine><color=#DCDCDC></color><newLine><1><color=#569CD6>public</color> <color=#B5CEA8>Vector2</color> <color=#DCDCDC>minPosition;</color><newLine><1><color=#569CD6>public</color> <color=#B5CEA8>Vector2</color> <color=#DCDCDC>maxPosition;</color><newLine><1><color=#569CD6>public int</color> <color=#DCDCDC>life =</color> <color=#B5CEA8>2</color><color=#DCDCDC>;</color><newLine><newLine><1><color=#569CD6>private void Start</color><color=#DCDCDC>()</color><newLine><1><color=#DCDCDC>{</color><newLine><2><color=#DCDCAA>UpdateLife</color><color=#DCDCDC>();</color><newLine><2><color=#DCDCAA>StartCoroutine</color><color=#DCDCDC>(</color><color=#DCDCAA>SpawnCroissant</color><color=#DCDCDC>());</color><newLine><1><color=#DCDCDC>}</color><newLine><color=#DCDCDC></color><newLine><1><color=#B5CEA8>IEnumerator</color> <color=#DCDCAA>SpawnCroissant</color><color=#DCDCDC>()</color><newLine><1><color=#DCDCDC>{</color><newLine><2><color=#569CD6>while</color> <color=#DCDCDC>(</color><color=#569CD6>true</color><color=#DCDCDC>)</color><newLine><2><color=#DCDCDC>{</color><newLine><3><color=#569CD6>float</color> <color=#DCDCDC>randomX =</color><color=#4EC9B0>Random</color><color=#DCDCDC>.Range(</color><color=#B5CEA8>-6f</color><color=#DCDCDC>,</color> <color=#B5CEA8>6f</color><color=#DCDCDC>);</color><newLine><3><color=#569CD6>int</color> <color=#DCDCDC>count =</color> <color=#B5CEA8>0</color><color=#DCDCDC>;</color><newLine><3><color=#569CD6>while</color> <color=#DCDCDC>(count <</color> <color=#B5CEA8>5</color><color=#DCDCDC>)</color><newLine><3><color=#DCDCDC>{</color><newLine><4><color=#DCDCAA>Instantiate</color><color=#DCDCDC>(</color><color=#DCDCDC>enemyCroissant,</color> <color=#569CD6>new</color> <color=#B5CEA8>Vector2</color><color=#DCDCDC>(randomX,</color> <color=#B5CEA8>15f</color><color=#DCDCDC>),</color> <color=#4EC9B0>Quaternion</color><color=#DCDCDC>.identity);</color><newLine><4><color=#569CD6>yield return new</color> <color=#DCDCAA>WaitForSeconds</color><color=#DCDCDC>(</color><color=#B5CEA8>0.2f</color><color=#DCDCDC>);</color><newLine><4><color=#DCDCDC>count++;</color><newLine><3><color=#DCDCDC>}</color><newLine><3><color=#569CD6>float</color> <color=#DCDCDC>delay</color> <color=#DCDCDC>=</color> <color=#4EC9B0>Random</color><color=#DCDCDC>.Range(</color><color=#B5CEA8>2f</color><color=#DCDCDC>,</color> <color=#B5CEA8>5f</color><color=#DCDCDC>);</color><newLine><3><color=#569CD6>yield return new</color> <color=#DCDCAA>WaitForSeconds</color><color=#DCDCDC>(delay);</color><newLine><2><color=#DCDCDC>}</color><newLine><1><color=#DCDCDC>}</color><newLine><color=#DCDCDC></color><newLine><1><color=#569CD6>public void</color> <color=#DCDCAA>UpdateLife</color><color=#DCDCDC>()</color><newLine><1><color=#DCDCDC>{</color><newLine><2><color=#DCDCDC>lifeText.text =</color> <color=#569CD6>string</color><color=#DCDCDC>.</color><blink><color=#DCDCAA>Format</color></blink><color=#DCDCDC>(</color><color=#D39D85>"x {0}"</color><color=#DCDCDC>,</color><blink><color=#DCDCDC>life</color></blink><color=#DCDCDC>);</color><newLine><1><color=#DCDCDC>}</color><newLine><color=#DCDCDC>}</color>